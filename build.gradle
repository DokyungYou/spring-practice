plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

//lombok
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web' // 내장 톰켓 서버를 활용해서 웹 서버와 스프링을 함께 실행하게끔 해줌
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //JPA, 스프링 데이터 JPA 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // 프록시 객체 -> json 관련 문제
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'

    runtimeOnly 'com.h2database:h2'


    // 쿼리 파라미터 로그 남기는 라이브러리
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'


    //JUnit4 추가
//    testImplementation("org.junit.vintage:junit-vintage-engine") {
//        exclude group: "org.hamcrest", module: "hamcrest-core"
//    }

}


tasks.named('test') {
    useJUnitPlatform()
}
